name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.GCP_REGION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and push docker.pipeline container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.pipeline
          push: true
          tags: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker/fancy-fashion-${{ secrets.USER_NAME }}:latest

      - name: Build and push docker.serving container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.serving
          push: true
          tags: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker/fancy-fashion-serving-${{ secrets.USER_NAME }}:latest

  compile_and_push_pipeline:
    runs-on: ubuntu-latest
    needs: build_and_push_docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: |
          poetry install

      - name: Compile pipeline
        run: |
          mkdir -p _artifacts && \
          poetry run python src/fancy_fashion/pipeline.py
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          GCP_PROJECT_NAME: ${{ secrets.GCP_PROJECT_NAME }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}

      - name: Push local .yaml artifacts to GCP Storage Bucket
        run: |
          gsutil cp _artifacts/pipeline.json gs://${{ secrets.GCP_PROJECT_ID }}-fashion-artifacts/models/fancy-fashion/${{ secrets.USER_NAME }}/pipeline.json

  trigger_cloud_function:
    runs-on: ubuntu-latest
    needs: compile_and_push_pipeline

    steps:
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Trigger Cloud Function
      run: |
        curl -m 70 -X POST https://europe-west1-${{ secrets.GCP_PROJECT_ID }}.cloudfunctions.net/fashion-gen2 \
        -H "Authorization: bearer $(gcloud auth print-identity-token)" \
        -H "Content-Type: application/json" \
        -d '{
          "model_name": "fancy-fashion",
          "model_version": "${{ secrets.USER_NAME }}",
          "pipeline_parameters": {
            "train_path": "gs://${{ secrets.GCP_PROJECT_ID }}-fashion-inputs/train",
            "test_path": "gs://${{ secrets.GCP_PROJECT_ID }}-fashion-inputs/test",
            "validation_path": "gs://${{ secrets.GCP_PROJECT_ID }}-fashion-inputs/validation"
          }
        }'
